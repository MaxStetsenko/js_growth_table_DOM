{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","field","btnAddRow","btnRemoveRow","btnAddColumn","btnRemoveColumn","fieldSize","min","max","checkSize","rows","rowsLength","length","rowChildrenLength","children","disabled","addEventListener","e","elem","target","classList","contains","split","method","rowOrColumn","el","td","createElement","append","cloneNode","remove"],"mappings":"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","file":"main.87cfde39.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\nconst container = document.querySelector('.container');\nconst field = document.querySelector('.field');\nconst btnAddRow = document.querySelector('.append-row');\nconst btnRemoveRow = document.querySelector('.remove-row');\nconst btnAddColumn = document.querySelector('.append-column');\nconst btnRemoveColumn = document.querySelector('.remove-column');\nconst fieldSize = {\n  min: 2,\n  max: 10,\n};\n\nfunction checkSize(rows) {\n  const rowsLength = rows.length;\n  const rowChildrenLength = rows[0].children.length;\n\n  btnRemoveRow.disabled = rowsLength === fieldSize.min;\n  btnAddRow.disabled = rowsLength === fieldSize.max;\n  btnAddColumn.disabled = rowChildrenLength === fieldSize.max;\n  btnRemoveColumn.disabled = rowChildrenLength === fieldSize.min;\n}\n\ncontainer.addEventListener('click', (e) => {\n  const elem = e.target;\n\n  if (!elem.classList.contains('button')) {\n    return;\n  }\n\n  const [method, rowOrColumn] = elem.classList[0].split('-');\n  const rows = field.rows;\n\n  switch (method) {\n    case 'append':\n      switch (rowOrColumn) {\n        case 'column':\n          for (const el of rows) {\n            const td = document.createElement('td');\n\n            el.append(td);\n          }\n          break;\n\n        case 'row':\n          field.append(field.rows[0].cloneNode(true));\n      }\n      break;\n\n    case 'remove':\n      switch (rowOrColumn) {\n        case 'column':\n          for (const el of rows) {\n            el.children[el.children.length - 1].remove();\n          }\n          break;\n\n        case 'row':\n          field.rows[rows.length - 1].remove();\n      }\n  }\n\n  checkSize(rows);\n});\n"]}